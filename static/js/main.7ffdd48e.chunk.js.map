{"version":3,"sources":["Table.js","Form.js","App.js","reportWebVitals.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","Form","handleChange","event","target","value","setState","onFormSubmit","preventDefault","handleSubmit","state","initialState","this","onSubmit","for","type","id","onChange","Component","App","characters","filter","character","i","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAEMA,EAAc,WAChB,OAAS,kCAEL,+BAEA,wCAFA,IAGiB,uCAHjB,IAIgB,0CAJhB,OAFK,QAaPC,EAAY,SAAAC,GACd,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACvC,OAAS,+BAEL,mCACOD,EAAIE,KADX,OAFK,IAGoB,mCAClBF,EAAIG,IADc,OAHpB,IAImB,mCACnB,wBAASC,QACV,kBAAMR,EAAMS,gBAAgBJ,IAD3B,2BAJMA,MAWnB,OAAO,sCAAWJ,EAAX,QAiBIS,EAdD,SAACV,GACX,IAAQE,EAAmCF,EAAnCE,cAAeO,EAAoBT,EAApBS,gBACvB,OAAS,kCAEL,cACA,EADA,IAEA,cACA,EADA,CACUP,cAAkBA,EAC5BO,gBAAoBA,IANf,Q,OCwBEE,E,kDAxDX,WAAYX,GAAQ,IAAD,8BACf,cAAMA,IAUVY,aAAe,SAAAC,GACX,MAAwBA,EAAMC,OAAtBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MAEd,EAAKC,SAAL,eACKV,EAAOS,KAfG,EAmBnBE,aAAe,SAACJ,GACZA,EAAMK,iBAEN,EAAKlB,MAAMmB,aAAa,EAAKC,OAC7B,EAAKJ,SAAS,EAAKK,eApBnB,EAAKA,aAAe,CAChBf,KAAM,GACNC,IAAK,IAGT,EAAKa,MAAQ,EAAKC,aARH,E,0CA0BnB,WACI,MAAsBC,KAAKF,MAAnBd,EAAR,EAAQA,KAAMC,EAAd,EAAcA,IAEd,OAAS,uBACAgB,SAAaD,KAAKL,aADlB,UAEL,uBAEAO,IAAM,OAFN,oBAFK,IAIyB,uBACxBC,KAAO,OACbnB,KAAO,OACPoB,GAAK,OACLX,MAAUT,EACVqB,SAAaL,KAAKV,eATb,IAUF,uBAEHY,IAAM,MAFH,mBAVE,IAYuB,uBACtBC,KAAO,OACbnB,KAAO,MACPoB,GAAK,MACLX,MAAUR,EACVoB,SAAaL,KAAKV,eAjBb,IAkBF,wBACIa,KAAO,SADX,qBAlBE,W,GA9BEG,aCwCJC,E,4MArCXT,MAAQ,CACJU,WAAY,I,EAGhBrB,gBAAkB,SAAAJ,GACd,IAAQyB,EAAe,EAAKV,MAApBU,WAER,EAAKd,SAAS,CACVc,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACtC,OAAOA,IAAM5B,Q,EAKzBc,aAAe,SAAAa,GACX,EAAKhB,SAAS,CAAEc,WAAW,GAAD,mBAAM,EAAKV,MAAMU,YAAjB,CAA6BE,O,4CAG3D,WACI,IAAQF,EAAeR,KAAKF,MAApBU,WAER,OAAS,sBACDI,UAAY,YADX,UAEL,kDAFK,IAGsB,sFAHtB,IAIyD,cAC9D,EAD8D,CACxDhC,cAAkB4B,EACxBrB,gBAAoBa,KAAKb,kBANpB,IAOF,2CAPE,IAQe,cACpB,EADoB,CACfU,aAAiBG,KAAKH,eATtB,W,GAtBCS,aCQHO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7ffdd48e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TableHeader = () => {\r\n    return ( <\r\n        thead >\r\n        <\r\n        tr >\r\n        <\r\n        th > Name < /th> <\r\n        th > Job < /th> <\r\n        th > Remove < /th> <\r\n        /tr> <\r\n        /thead>\r\n    );\r\n}\r\n\r\nconst TableBody = props => {\r\n    const rows = props.characterData.map((row, index) => {\r\n        return ( <\r\n            tr key = { index } >\r\n            <\r\n            td > { row.name } < /td> <\r\n            td > { row.job } < /td> <\r\n            td > < button onClick = {\r\n                () => props.removeCharacter(index) } > Delete < /button></td >\r\n            <\r\n            /tr>\r\n        );\r\n    });\r\n\r\n    return <tbody > { rows } < /tbody>;\r\n}\r\n\r\nconst Table = (props) => {\r\n    const { characterData, removeCharacter } = props;\r\n    return ( <\r\n        table >\r\n        <\r\n        TableHeader / >\r\n        <\r\n        TableBody characterData = { characterData }\r\n        removeCharacter = { removeCharacter }\r\n        /> <\r\n        /table>\r\n    );\r\n}\r\n\r\nexport default Table;","import React, { Component } from 'react';\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.initialState = {\r\n            name: '',\r\n            job: ''\r\n        };\r\n\r\n        this.state = this.initialState;\r\n    }\r\n\r\n    handleChange = event => {\r\n        const { name, value } = event.target;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.props.handleSubmit(this.state);\r\n        this.setState(this.initialState);\r\n    }\r\n\r\n    render() {\r\n        const { name, job } = this.state;\r\n\r\n        return ( <\r\n            form onSubmit = { this.onFormSubmit } >\r\n            <\r\n            label\r\n            for = \"name\" > Name < /label> <\r\n            input type = \"text\"\r\n            name = \"name\"\r\n            id = \"name\"\r\n            value = { name }\r\n            onChange = { this.handleChange }\r\n            /> <\r\n            label\r\n            for = \"job\" > Job < /label> <\r\n            input type = \"text\"\r\n            name = \"job\"\r\n            id = \"job\"\r\n            value = { job }\r\n            onChange = { this.handleChange }\r\n            /> <\r\n            button type = \"submit\" >\r\n            Submit <\r\n            /button> <\r\n            /form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;","import React, { Component } from 'react';\nimport Table from './Table';\nimport Form from './Form';\n\nclass App extends Component {\n    state = {\n        characters: []\n    };\n\n    removeCharacter = index => {\n        const { characters } = this.state;\n\n        this.setState({\n            characters: characters.filter((character, i) => {\n                return i !== index;\n            })\n        });\n    }\n\n    handleSubmit = character => {\n        this.setState({ characters: [...this.state.characters, character] });\n    }\n\n    render() {\n        const { characters } = this.state;\n\n        return ( <\n            div className = \"container\" >\n            <\n            h1 > React Tutorial < /h1> <\n            p > Add a character with a name and a job to the table. < /p> <\n            Table characterData = { characters }\n            removeCharacter = { this.removeCharacter }\n            /> <\n            h3 > Add New < /h3> <\n            Form handleSubmit = { this.handleSubmit }\n            /> <\n            /div>\n        );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}